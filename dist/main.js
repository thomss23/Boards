(()=>{"use strict";document.querySelector(".header");let e=document.querySelector("ul");function t(){let e=document.querySelectorAll(".project-name");[].forEach.call(e,(function(e){if(e.classList.contains("selected")){const t=e.parentElement;t.removeChild(t.lastChild),t.removeChild(t.lastChild),e.classList.remove("selected")}}))}function n(){if(0==this.getInitiatedNewProject()){t(),this.setInitiatedNewProject(!0);let n=document.createElement("div");n.classList.add("user-input");let c=document.createElement("input"),i=document.createElement("div");i.classList.add("confirmation-buttons");let o=document.createElement("button"),s=document.createElement("button");o.classList.add("submit-btn"),o.textContent="Submit",s.classList.add("cancel-btn"),s.textContent="Cancel",i.appendChild(o),i.appendChild(s),n.appendChild(c),n.appendChild(i),e.appendChild(n)}}function c(){e.removeChild(e.lastChild)}class i{constructor(e,t,n,c,i){this.title=e,this.description=t,this.dueDate=n,this.priority=c,this.IsDone=i}getTitle(){return this.title}setTitle(e){this.title=e}setIsDone(e){this.IsDone=e}getIsDone(){return this.IsDone}toggleIsDone(){this.IsDone=!this.IsDone}}class o{entryList=[];constructor(e){this.name=e}addNewEntry(e,t,n,c){let o=new i(e,t,n,c,!1);this.entryList.push(o)}removeEntry(e){this.entryList.splice(e,1)}toggleIsDoneEntry(e){this.entryList[e].toggleIsDone()}getProjectName(){return this.name}}document.querySelector(".card-container");const s=document.querySelector(".header"),r=document.querySelector("body");var d;d=new class{projects=[];initiatedNewProject=!1;initiatedNewTodo=!1;initiatedDeleteProject=!1;selectedProject=!1;constructor(){}addNewProject(e){this.projects.push(e)}getProject(e){return this.projects[e]}getProjects(){return this.projects}setInitiatedNewProject(e){this.initiatedNewProject=e}getInitiatedNewProject(){return this.initiatedNewProject}getSelectedProject(){return this.selectedProject}setSelectedProject(e){this.selectedProject=e}},s.addEventListener("click",n.bind(d)),r.addEventListener("click",(e=>{switch(e.target.className){case"submit-btn":let n=document.querySelector("input");n.value?(function(e,t){let n=new o(e);t.addNewProject(n),c(),function(e){let t=document.querySelector("ul"),n=document.createElement("li"),c=document.createElement("div");c.textContent=e,c.classList.add("project-name"),n.appendChild(c),t.appendChild(n)}(e)}(n.value,d),d.setInitiatedNewProject(!1)):n.value="Empty value not allowed";break;case"cancel-btn":d.setInitiatedNewProject(!1),c();break;case"project-name":d.getInitiatedNewProject()||(t(),function(e){let t=document.createElement("button");t.textContent="+";let n=document.createElement("button");n.textContent="-",e.parentElement.appendChild(t),e.parentElement.appendChild(n)}(e.target),function(e){for(project in void 0){let e=document.createElement("div");e.classList.add("card"),e.textContent=project.getProjectName(),projectList.appendChild(newProject)}}(),e.target.classList.add("selected"))}}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,